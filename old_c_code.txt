#define NUM_LEDS      105
//#define THEO_NUM_LEDS 112
#define NUM_ROWS      7
#define NUM_COLS      16
#define THEO_NUM_LEDS NUM_ROWS*NUM_COLS
#define BRIGHTNESS          50
#define FRAMES_PER_SECOND  60

int mask_mapmatrix[NUM_ROWS][NUM_COLS] = {
  {0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15},
  {-1,30,29,28,27,26,25,24,23,22,21,20,19,18,17,16},
  {-1,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45},
  {-1,60,59,58,57,56,55,54,53,52,51,50,49,48,47,46},
  {-1,-1,61,62,63,64,65,66,67,68,69,70,71,72,73,-1},
  {-1,-1,85,84,83,82,81,80,79,78,77,76,75,74,-1,-1},
  {-1,-1,86,87,88,89,90,91,92,93,94,95,96,97,-1,-1}
};



void old_hello() 
{
  FastLED.clear();
  for (int frame=0; frame<38; frame++) {    // move frame to main loop
    for (int led_pos=0; led_pos<THEO_NUM_LEDS; led_pos++) {
      int row = (led_pos / NUM_COLS);
      int col = (led_pos % NUM_COLS);
      
      if (mask_mapmatrix[row][col] != -1 ) {
        if (pgm_read_byte(&(HELLO_a[frame][led_pos])) == 1) {
          leds[mask_mapmatrix[row][col]] = CRGB ( 255, 255, 0 );
        } else {
          leds[mask_mapmatrix[row][col]] = CRGB ( 0, 0, 0 );
        }
      }
    }
   FastLED.show();
   delay(150);
  }
  
  FastLED.show();
  delay(1000);
  aPatternActive = false;
}

